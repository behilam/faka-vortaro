import fs from "fs";
import path from "path";

const kapMesagxo = /*ts*/ `
/* tslint:disable */
/* eslint-disable */
/**
 * This file is automatically generated.
 * If you need to modify these types, please modify the script that generates them,
 * And rerun the script \`yarn generate:types\` to regenerate this file.
 */
`.trim();

const enportoj = `
import { Subtrahi } from './utiltipoj';
`.trim();

/** Helper types derived from the asserted types */
const ekstrajTipoj = `
export type Rolo = NonNullable<Uzanto<0>["roloj"]>[number];
export type Signifo = NonNullable<Termino<0>["signifoj"]>[number];
export type SignifoEkzemplo = NonNullable<Signifo["ekzemploj"]>[number];
export type Tradukoj = NonNullable<Termino<0>["lingvoj"]>;
`;

const asertitajTipojDosiernomo = "payload-asertitaj-tipoj.ts";
const tipujo = path.resolve(__dirname, "../tipoj");
const eligvojo = path.resolve(tipujo, asertitajTipojDosiernomo);

try {
  const vaniltipoj = fs.readFileSync(`${tipujo}/payload-tipoj.ts`, "utf-8");
  const gxisdatigitajTipoj = vaniltipoj
    .replace(/\/\*[^]+\*\/\r?\n\r?\n/g, "") // Remove initial ts-lint comment
    .replace(/^export interface (\w+)/gm, "export interface $1<Profundo extends number = 2>") // Convert interfaces into types
    .replace(/^}$/gm, "};") // Append semicolon to type end
    .replace(/\binterface Config<.+>/, "interface Config") // Remove Profundo generic from Config type
    .replace(/: string \| ([A-Z]\w+);/g, ": Profundo extends 0 ? string : $1<Subtrahi<Profundo>>;")
    .replace(/: \(string \| null\) \| ([A-Z]\w+);/g, ": (Profundo extends 0 ? string : $1<Subtrahi<Profundo>>) | null;")
    .replace(/: string \| ([A-Z]\w+) \| null;/g, ": (Profundo extends 0 ? string : $1<Subtrahi<Profundo>>) | null;")
    .replace(/: \(string \| ([A-Z]\w+)\)\[\];/g, ": Profundo extends 0 ? string[] : $1<Subtrahi<Profundo>>[];")
    .replace(/: \(string \| ([A-Z]\w+)\)\[\] \| null;/g, ": (Profundo extends 0 ? string[] : $1<Subtrahi<Profundo>>[]) | null;")
    .replace(/declare module 'payload'[^]*/m, "/* Derivated types */");

  const asertitajTipoj = `${kapMesagxo}\n\n${enportoj}\n\n${gxisdatigitajTipoj}${ekstrajTipoj}`;
  fs.writeFileSync(eligvojo, asertitajTipoj);
  console.info(`âœ¨ Asertitaj tipoj generitaj en ${eligvojo}`);
} catch (e) {
  console.error(`ðŸ’¥ Eraro dum asertitaj tipoj kreatis!`);
  console.error(e);
}
